{"version":3,"sources":["stChat.tsx","index.tsx"],"names":["specificChatDivStyles","props","isUser","css","Chat","render","args","avatarStyle","seed","message","avatarUrl","theme","styled","div","font","Avatar","img","Message","secondaryBackgroundColor","src","alt","draggable","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"mSAWMA,EAAwB,SAACC,GAC7B,OAAIA,EAAMC,OACDC,YAAP,0HAOKA,YAAP,2BAGIC,E,4MACGC,OAAS,WACd,MAA+C,EAAKJ,MAAMK,KAAlDJ,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,QAC7BC,EAAS,2CAAuCH,EAAvC,YAAsDC,EAAtD,QAKPG,EAAU,EAAKV,MAAfU,MAIR,IAAKA,EACH,OAAO,oFAGT,IAAMP,EAAOQ,IAAOC,IAAV,kNAKOF,EAAMG,KAEnBd,GAGEe,EAASH,IAAOI,IAAV,4JAQNC,EAAUL,IAAOC,IAAV,kOAEGF,EAAMO,0BAQtB,OACE,kBAAC,EAAD,CAAMhB,OAAQA,GACZ,kBAACa,EAAD,CAAQI,IAAKT,EAAWU,IAAI,UAAUC,UAAU,UAChD,kBAACJ,EAAD,KAAUR,K,yBA/CCa,KAqDJC,cAAwBnB,GCxEvCoB,IAASnB,OACP,kBAAC,IAAMoB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8224ed41.chunk.js","sourcesContent":["import {\n  // eslint-disable-next-line \n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/react'\n\n\nconst specificChatDivStyles = (props: {isUser: boolean}) => {\n  if (props.isUser) {\n    return css`\n      flex-direction: row-reverse;\n      & > div {\n        text-align: right;\n      }\n    `\n  }\n  return css``\n}\n\nclass Chat extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    const { isUser, avatarStyle, seed, message } = this.props.args;\n    const avatarUrl = `https://avatars.dicebear.com/api/${avatarStyle}/${seed}.svg`\n    \n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    \n    // Maintain compatibility with older versions of Streamlit that don't send\n    // a theme object.\n    if (!theme) {\n      return <div>Theme is undefined, please check streamlit version.</div>\n    }\n\n    const Chat = styled.div`\n      width: 100%;\n      height: auto;\n      display: flex;\n      flex-direction: row;\n      font-family: ${theme.font}, 'Segoe UI', 'Roboto', sans-serif;\n      margin: 0;\n      ${specificChatDivStyles}\n    `\n\n    const Avatar = styled.img`\n      border: 1px solid transparent;\n      border-radius: 50%;\n      height: 3rem;\n      width: 3rem;\n      margin: 0;\n    `\n\n    const Message = styled.div`\n      display: inline-block;\n      background: ${theme.secondaryBackgroundColor};\n      border: 1px solid transparent;\n      border-radius: 10px;\n      padding: 10px 14px;\n      margin: 5px 20px;\n      max-width: 70%;\n    `\n\n    return (\n      <Chat isUser={isUser}>\n        <Avatar src={avatarUrl} alt=\"profile\" draggable=\"false\"/>\n        <Message>{message}</Message>\n      </Chat>\n    )\n  }\n}\n\nexport default withStreamlitConnection(Chat);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Chat from \"./stChat\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}